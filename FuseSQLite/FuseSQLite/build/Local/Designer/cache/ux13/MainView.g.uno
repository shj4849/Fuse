[Uno.Compiler.UxGenerated]
public partial class MainView: Fuse.App
{
    global::Uno.UX.Property<string> temp_Value_inst;
    global::Uno.UX.Property<string> temp1_mValue_inst;
    global::Uno.UX.Property<string> temp2_mValue_inst;
    global::Uno.UX.Property<string> temp3_mValue_inst;
    global::Uno.UX.Property<string> temp4_mValue_inst;
    [global::Uno.UX.UXGlobalResource("SQLite")] public static readonly SQLite SQLite;
    internal global::Fuse.Reactive.EventBinding temp_eb0;
    internal global::Fuse.Reactive.EventBinding temp_eb1;
    internal global::Fuse.Reactive.EventBinding temp_eb2;
    internal global::Fuse.Reactive.EventBinding temp_eb3;
    global::Uno.UX.NameTable __g_nametable;
    static string[] __g_static_nametable = new string[] {
        "temp_eb0",
        "temp_eb1",
        "temp_eb2",
        "temp_eb3"
    };
    static MainView()
    {
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.Linear, "Linear");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuadraticIn, "QuadraticIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuadraticOut, "QuadraticOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuadraticInOut, "QuadraticInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CubicIn, "CubicIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CubicOut, "CubicOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CubicInOut, "CubicInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuarticIn, "QuarticIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuarticOut, "QuarticOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuarticInOut, "QuarticInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuinticIn, "QuinticIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuinticOut, "QuinticOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.QuinticInOut, "QuinticInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.SinusoidalIn, "SinusoidalIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.SinusoidalOut, "SinusoidalOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.SinusoidalInOut, "SinusoidalInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ExponentialIn, "ExponentialIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ExponentialOut, "ExponentialOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ExponentialInOut, "ExponentialInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CircularIn, "CircularIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CircularOut, "CircularOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.CircularInOut, "CircularInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ElasticIn, "ElasticIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ElasticOut, "ElasticOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.ElasticInOut, "ElasticInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BackIn, "BackIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BackOut, "BackOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BackInOut, "BackInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BounceIn, "BounceIn");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BounceOut, "BounceOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Animations.Easing.BounceInOut, "BounceInOut");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Transparent, "Transparent");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Transparent, "Transparent");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Black, "Black");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Black, "Black");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Silver, "Silver");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Silver, "Silver");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Gray, "Gray");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Gray, "Gray");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.White, "White");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.White, "White");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Maroon, "Maroon");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Maroon, "Maroon");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Red, "Red");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Red, "Red");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Purple, "Purple");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Purple, "Purple");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Fuchsia, "Fuchsia");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Fuchsia, "Fuchsia");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Green, "Green");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Green, "Green");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Lime, "Lime");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Lime, "Lime");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Olive, "Olive");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Olive, "Olive");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Yellow, "Yellow");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Yellow, "Yellow");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Navy, "Navy");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Navy, "Navy");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Blue, "Blue");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Blue, "Blue");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Teal, "Teal");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Teal, "Teal");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Colors.Aqua, "Aqua");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Drawing.Brushes.Aqua, "Aqua");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TransformOrigins.TopLeft, "TopLeft");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TransformOrigins.Center, "Center");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TransformOrigins.Anchor, "Anchor");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TransformOrigins.HorizontalBoxCenter, "HorizontalBoxCenter");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TransformOrigins.VerticalBoxCenter, "VerticalBoxCenter");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TranslationModes.TransformOriginOffset, "TransformOriginOffset");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TranslationModes.PositionOffset, "PositionOffset");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TranslationModes.SizeFactor, "SizeFactor");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Elements.TranslationModes.Size, "Size");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.TranslationModes.Size, "Size");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.Actions.GiveFocus.Singleton, "GiveFocus");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.WhileKeyboardVisible.Keyboard, "Keyboard");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.PositionLayoutChange, "LayoutChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.SizeLayoutChange, "LayoutChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.WorldPositionChange, "WorldPositionChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.PositionChange, "PositionChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.ResizeSizeChange, "SizeChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.LayoutTransition.ScalingSizeChange, "SizeChange");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.IScrolledLengths.Points, "Points");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.IScrolledLengths.Pixels, "Pixels");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.IScrolledLengths.ContentSize, "ContentSize");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Triggers.IScrolledLengths.ScrollViewSize, "ScrollViewSize");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Resources.MemoryPolicy.PreloadRetain, "PreloadRetain");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Resources.MemoryPolicy.UnloadUnused, "UnloadUnused");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Resources.MemoryPolicy.QuickUnload, "QuickUnload");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Resources.MemoryPolicy.UnloadInBackgroundPolicy, "UnloadInBackground");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Thin, "Thin");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Light, "Light");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Regular, "Regular");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Medium, "Medium");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Bold, "Bold");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.ThinItalic, "ThinItalic");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.LightItalic, "LightItalic");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.Italic, "Italic");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.MediumItalic, "MediumItalic");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.BoldItalic, "BoldItalic");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.Font.PlatformDefault, "PlatformDefault");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.ScalingModes.Identity, "Identity");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.TranslationModes.Local, "Local");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.TranslationModes.ParentSize, "ParentSize");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.TranslationModes.Width, "Width");
        global::Uno.UX.Resource.SetGlobalKey(global::Fuse.TranslationModes.Height, "Height");
        global::Uno.UX.Resource.SetGlobalKey(global::MainView.SQLite, "SQLite");
        SQLite = new global::SQLite();
        global::Uno.UX.Resource.SetGlobalKey(SQLite, "SQLite");
    }
    [global::Uno.UX.UXConstructor]
    public MainView()
    {
        InitializeUX();
    }
    void InitializeUX()
    {
        var temp5 = new global::Fuse.Reactive.FuseJS.DiagnosticsImplModule();
        var temp6 = new global::Fuse.Reactive.FuseJS.Http();
        var temp7 = new global::Fuse.Reactive.FuseJS.TimerModule();
        var temp8 = new global::Fuse.Drawing.BrushConverter();
        var temp9 = new global::Fuse.Triggers.BusyTaskModule();
        var temp10 = new global::Fuse.Testing.UnoTestingHelper();
        var temp11 = new global::Fuse.FileSystem.FileSystemModule();
        var temp12 = new global::Fuse.Storage.StorageModule();
        var temp13 = new global::Fuse.WebSocket.WebSocketClientModule();
        var temp14 = new global::Polyfills.Window.WindowModule();
        var temp15 = new global::FuseJS.Globals();
        var temp16 = new global::FuseJS.Lifecycle();
        var temp17 = new global::FuseJS.Environment();
        var temp18 = new global::FuseJS.Base64();
        var temp19 = new global::FuseJS.Bundle();
        var temp20 = new global::FuseJS.FileReaderImpl();
        var temp21 = new global::FuseJS.UserEvents();
        __g_nametable = new global::Uno.UX.NameTable(null, __g_static_nametable);
        var temp = new global::Fuse.Controls.Text();
        temp_Value_inst = new FuseSQLiteTest_FuseControlsTextControl_Value_Property(temp, __selector0);
        var temp22 = new global::Fuse.Reactive.Data("mainText");
        var temp1 = new global::TextField();
        temp1_mValue_inst = new FuseSQLiteTest_TextField_mValue_Property(temp1, __selector1);
        var temp23 = new global::Fuse.Reactive.Data("id");
        var temp2 = new global::TextField();
        temp2_mValue_inst = new FuseSQLiteTest_TextField_mValue_Property(temp2, __selector1);
        var temp24 = new global::Fuse.Reactive.Data("pw");
        var temp3 = new global::TextField();
        temp3_mValue_inst = new FuseSQLiteTest_TextField_mValue_Property(temp3, __selector1);
        var temp25 = new global::Fuse.Reactive.Data("name");
        var temp4 = new global::TextField();
        temp4_mValue_inst = new FuseSQLiteTest_TextField_mValue_Property(temp4, __selector1);
        var temp26 = new global::Fuse.Reactive.Data("email");
        var temp27 = new global::Fuse.Reactive.Data("mainViewReSet");
        var temp28 = new global::Fuse.Reactive.Data("db_insert");
        var temp29 = new global::Fuse.Reactive.Data("db_select");
        var temp30 = new global::Fuse.Reactive.Data("db_deleted");
        var temp31 = new global::Fuse.Reactive.JavaScript(__g_nametable);
        var temp32 = new global::Fuse.Controls.ClientPanel();
        var temp33 = new global::Fuse.Controls.Grid();
        var temp34 = new global::Fuse.Controls.Panel();
        var temp35 = new global::Fuse.Controls.Text();
        var temp36 = new global::Fuse.Controls.ScrollView();
        var temp37 = new global::Fuse.Controls.Grid();
        var temp38 = new global::Fuse.Reactive.DataBinding(temp_Value_inst, temp22, Fuse.Reactive.BindingMode.Default);
        var temp39 = new global::Fuse.Controls.DockPanel();
        var temp40 = new global::Fuse.Controls.Panel();
        var temp41 = new global::Fuse.Controls.StackPanel();
        var temp42 = new global::Fuse.Controls.Grid();
        var temp43 = new global::Fuse.Controls.Text();
        var temp44 = new global::Fuse.Reactive.DataBinding(temp1_mValue_inst, temp23, Fuse.Reactive.BindingMode.Default);
        var temp45 = new global::Fuse.Controls.Grid();
        var temp46 = new global::Fuse.Controls.Text();
        var temp47 = new global::Fuse.Reactive.DataBinding(temp2_mValue_inst, temp24, Fuse.Reactive.BindingMode.Default);
        var temp48 = new global::Fuse.Controls.Grid();
        var temp49 = new global::Fuse.Controls.Text();
        var temp50 = new global::Fuse.Reactive.DataBinding(temp3_mValue_inst, temp25, Fuse.Reactive.BindingMode.Default);
        var temp51 = new global::Fuse.Controls.Grid();
        var temp52 = new global::Fuse.Controls.Text();
        var temp53 = new global::Fuse.Reactive.DataBinding(temp4_mValue_inst, temp26, Fuse.Reactive.BindingMode.Default);
        var temp54 = new global::Fuse.Controls.StackPanel();
        var temp55 = new global::MyButton();
        temp_eb0 = new global::Fuse.Reactive.EventBinding(temp27);
        var temp56 = new global::Fuse.Controls.StackPanel();
        var temp57 = new global::MyButton();
        temp_eb1 = new global::Fuse.Reactive.EventBinding(temp28);
        var temp58 = new global::MyButton();
        temp_eb2 = new global::Fuse.Reactive.EventBinding(temp29);
        var temp59 = new global::MyButton();
        temp_eb3 = new global::Fuse.Reactive.EventBinding(temp30);
        temp31.Code = "\n\t\tvar Observable = require(\"FuseJS/Observable\");\n\t\tvar mainText = Observable(\"\");\n\t\tvar sqlite = require('SQLite'); //SQLite를 사용하겠다고 선언합니다.\n\t\tvar db = sqlite.open(\"FuseDBTest.sqlite\"); //데이터베이스를 있으면 가져오고 없으면 생성합니다.\n\t\tvar mTableName\t= \"USERS\";\n\t\tvar mID\t\t\t= \"ID\";\n\t\tvar mUserID\t\t= \"UserID\";\n\t\tvar mUserPW\t\t= \"UserPW\";\n\t\tvar mUserName\t= \"UserName\";\n\t\tvar mUserEmail\t= \"UserEmail\";\n\t\tvar mUserDate\t= \"UserDate\";\n\n\t\tvar rowData = [{UserID:Observable(\"abc12\"),\n\t\t\t\t\t\tUserPW:Observable(\"1234\"),\n\t\t\t\t\t\tUserName:Observable(\"개발자\"),\n\t\t\t\t\t\tUserEmail:Observable(\"abc@gmail.com\")}];\n\n\t\tvar query = \"\";\n\n\t\t/*\n\t\t var result = db.query() : 쿼리를 실행하고 리턴을 받을수있습니다.\n\t\t 리턴은 JSON 으로 들어오며 JSON.stringify(db.query(query)); 이렇게 하시면 JSON 형식을 String으로 변수에\n\t\t 담을수있습니다.\n\t\t [{\"name\":\"user\"}]\n\t\t 위와 같은 log 가 나왔다면\n\t\t result[0].name 로 접근하여 데이터를 가져올수있습니다.\n\n\t\t db.execute() : 리턴을 받지않고 실행합니다.\n\n\t\t*/\n\n\n\n \t\t/** 테이블을 체크합니다. */\n\t\tfunction db_TableCheck(){\n\t\t\tvar result = \"\";\n\n\t\t\ttry{\n\t\t\t\tquery = \"SELECT name FROM sqlite_master WHERE type='table' AND name ='\"+mTableName+\"'\";\n\t\t\t\tresult = db.query(query);\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(\"tableCheck [Exception] \" + error);\n\t\t\t}\n\n\t\t\tif(result != \"\"){\n\t\t\t\t//console.log(result[0].name);\n\t\t\t\tif(result[0].name == mTableName){\n\t\t\t\t\t// query = \"drop table USERS\";\n\t\t\t\t\t// var result = JSON.stringify(db.query(query));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/** 테이블을 생성합니다. */\n\t\tfunction db_init(){\n\t\t\ttry{\n\t\t\t\tif(db_TableCheck() == false){\n\t\t\t\t\tquery = \"create table \" + mTableName\n\t\t\t\t\t\t+ \" (\" + mID + \" integer primary key autoincrement, \"\n\t\t\t\t\t\t+ mUserID + \" TEXT NOT NULL, \"\n\t\t\t\t\t\t+ mUserPW + \" TEXT NOT NULL, \"\n\t\t\t\t\t\t+ mUserName + \" TEXT NOT NULL, \"\n\t\t\t\t\t\t+ mUserEmail + \" TEXT NOT NULL, \"\n\t\t\t\t\t\t+ mUserDate + \" DATETIME DEFAULT CURRENT_TIMESTAMP)\";\n\t\t\t\t\tconsole.log(query)   ;\n\t\t\t\t\tdb.execute(query);\n\t\t\t\t}else{\n\t\t\t\t\tquery = \"pragma table_info(USERS)\";\n\t\t\t\t\tvar result = JSON.stringify(db.query(query));\n\t\t\t\t\t//console.log(result);\n\t\t\t\t}\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(\"init [Exception] : \" + error);\n\t\t\t}\n\t\t}\n\n\t\t/** 데이터를 넣습니다. */\n\t\tfunction db_insert(){\n\t\t\ttry {\n\t\t\t\tquery = \"insert into \" + mTableName + \" (\"+mUserID+\",\"+mUserPW+\",\"+mUserName+\",\"+mUserEmail+\") values (\"\n\t\t\t\t + \"'\" + rowData[0].UserID.value + \"',\"\n\t\t\t\t + \"'\" + rowData[0].UserPW.value + \"',\"\n\t\t\t\t + \"'\" + rowData[0].UserName.value + \"',\"\n\t\t\t\t + \"'\" + rowData[0].UserEmail.value + \"')\";\n\t\t\t\tconsole.log(query);\n\t\t\t\tdb.query(query);\n\t\t\t\tvar result = JSON.stringify(db.query(\"select * from \"+mTableName+\"\"));\n\t\t\t\tconsole.log(result);\n\t\t\t\tmainText.value = result;\n\t\t\t}catch (error) {\n\t\t\t\tconsole.log(\"insert [Error] \" + error);\n\t\t\t}\n\t\t}\n\n\t\t/** 마지막 ID 값을 기준으로 뒤에서부터 데이터를 삭제합니다. */\n\t\tfunction db_deleted(){\n\t\t\ttry{\n\t\t\t\tquery = \"delete from \"+mTableName+\" where \"+mID+\" = (select MAX(\"+mID+\") from \"+mTableName+\");\";\n\t\t\t\tdb.query(query);\n\t\t\t\tvar result = JSON.stringify(db.query(\"select * from \"+mTableName+\"\"));\n\t\t\t\tconsole.log(result);\n\t\t\t\tmainText.value = result;\n\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(\"deleted [Error] \" + error);\n\t\t\t}\n\t\t}\n\n\t\t/** 테이블을 삭제합니다. */\n\t\tfunction db_tableDrop(){\n\t\t\tquery = \"drop table \" + mTableName;\n\t\t\tdb.query(query);\n\t\t}\n\n\t\t/** 데이터를 조회해서 화면에 뿌립니다. */\n\t\tfunction db_select(){\n\t\t\ttry{\n\t\t\t\tvar result = JSON.stringify(db.query(\"select * from \"+mTableName+\"\"));\n\t\t\t\tif(result != \"[]\"){\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t\tmainText.value = result;\n\t\t\t\t}else{\n\t\t\t\t\tmainText.value = \"Not Datas\";\n\t\t\t\t}\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(\"db_select [Error] : \" + error);\n\t\t\t}\n\t\t}\n\n\t\tfunction mainViewReSet(){\n\t\t\tmainText.value = \"\";\n\t\t}\n\n\t\t/** 데이터베이스를 만듭니다. */\n\t\tdb_init();\n\n\n\t\t/** fuseDBTest2.db 파일을 추가하여 DB를 사용하는 방법 */\n\t\t// var fuseDBTest2;\n\t\t// function fuseDBTest2Open () {\n\t\t// \tif (fuseDBTest2) {\n\t\t// \t\tdebug_log(\"Closing\");\n\t\t// \t\tfuseDBTest2.close();\n\t\t// \t}\n\t\t// \tdebug_log(\"Open fuseDBTest2 Bundle\");\n\t\t// \tfuseDBTest2 = sqlite.openFromBundle('fuseDBTest2.db');\n\t\t// \tdebug_log(JSON.stringify(fuseDBTest2.query(\"SELECT * FROM Payment\")));\n\t\t// }\n\t\t// fuseDBTest2Open();\n\n\n\n\t\tmodule.exports={\n\t\t\tdb_insert, db_select, db_deleted, mainText, mainViewReSet,\n\t\t\tid: rowData[0].UserID,\n\t\t\tpw: rowData[0].UserPW,\n\t\t\tname: rowData[0].UserName,\n\t\t\temail: rowData[0].UserEmail,\n\t\t}\n\n\n\t";
        temp31.LineNumber = 3;
        temp31.FileName = "MainView.ux";
        temp32.Children.Add(temp33);
        temp33.Rows = "50, 1*, 1*";
        temp33.Children.Add(temp34);
        temp33.Children.Add(temp36);
        temp33.Children.Add(temp39);
        temp34.Color = Fuse.Drawing.Colors.Gray;
        temp34.Children.Add(temp35);
        temp35.Value = "SQLite DB Test";
        temp35.FontSize = 20f;
        temp35.Color = Fuse.Drawing.Colors.Black;
        temp35.Alignment = Fuse.Elements.Alignment.Center;
        temp36.Children.Add(temp37);
        temp37.Children.Add(temp);
        temp.TextWrapping = Fuse.Controls.TextWrapping.Wrap;
        temp.FontSize = 14f;
        temp.Bindings.Add(temp38);
        temp39.Color = Fuse.Drawing.Colors.Gray;
        temp39.Children.Add(temp40);
        temp39.Children.Add(temp54);
        temp40.Margin = float4(0f, 10f, 0f, 0f);
        global::Fuse.Controls.DockPanel.SetDock(temp40, Fuse.Layouts.Dock.Top);
        temp40.Children.Add(temp41);
        temp41.ItemSpacing = 5f;
        temp41.Alignment = Fuse.Elements.Alignment.Center;
        temp41.Children.Add(temp42);
        temp41.Children.Add(temp45);
        temp41.Children.Add(temp48);
        temp41.Children.Add(temp51);
        temp42.Columns = "70,200";
        temp42.Children.Add(temp43);
        temp42.Children.Add(temp1);
        temp43.Value = "ID";
        temp43.Color = Fuse.Drawing.Colors.Black;
        temp43.Alignment = Fuse.Elements.Alignment.CenterLeft;
        temp43.Margin = float4(0f, 0f, 10f, 0f);
        temp1.Bindings.Add(temp44);
        temp45.Columns = "70,200";
        temp45.Children.Add(temp46);
        temp45.Children.Add(temp2);
        temp46.Value = "PW";
        temp46.Color = Fuse.Drawing.Colors.Black;
        temp46.Alignment = Fuse.Elements.Alignment.CenterLeft;
        temp46.Margin = float4(0f, 0f, 10f, 0f);
        temp2.Bindings.Add(temp47);
        temp48.Columns = "70,200";
        temp48.Children.Add(temp49);
        temp48.Children.Add(temp3);
        temp49.Value = "Name";
        temp49.Color = Fuse.Drawing.Colors.Black;
        temp49.Alignment = Fuse.Elements.Alignment.CenterLeft;
        temp49.Margin = float4(0f, 0f, 10f, 0f);
        temp3.Bindings.Add(temp50);
        temp51.Columns = "70,200";
        temp51.Children.Add(temp52);
        temp51.Children.Add(temp4);
        temp52.Value = "Email";
        temp52.Color = Fuse.Drawing.Colors.Black;
        temp52.Alignment = Fuse.Elements.Alignment.CenterLeft;
        temp52.Margin = float4(0f, 0f, 10f, 0f);
        temp4.Bindings.Add(temp53);
        temp54.Alignment = Fuse.Elements.Alignment.Center;
        temp54.Children.Add(temp55);
        temp54.Children.Add(temp56);
        temp55.Margin = float4(0f, 0f, 0f, 5f);
        temp55.mText = "ReSet";
        temp55.mColor = float4(1f, 1f, 1f, 1f);
        global::Fuse.Gestures.Clicked.AddHandler(temp55, temp_eb0.OnEvent);
        temp55.Bindings.Add(temp_eb0);
        temp56.Orientation = Fuse.Layouts.Orientation.Horizontal;
        temp56.ItemSpacing = 5f;
        temp56.Alignment = Fuse.Elements.Alignment.Center;
        temp56.Children.Add(temp57);
        temp56.Children.Add(temp58);
        temp56.Children.Add(temp59);
        temp57.mText = "Insert";
        temp57.mColor = Fuse.Drawing.Colors.Black;
        global::Fuse.Gestures.Clicked.AddHandler(temp57, temp_eb1.OnEvent);
        temp57.Bindings.Add(temp_eb1);
        temp58.mText = "Select";
        temp58.mColor = Fuse.Drawing.Colors.Black;
        global::Fuse.Gestures.Clicked.AddHandler(temp58, temp_eb2.OnEvent);
        temp58.Bindings.Add(temp_eb2);
        temp59.mText = "Delete";
        temp59.mColor = Fuse.Drawing.Colors.Black;
        global::Fuse.Gestures.Clicked.AddHandler(temp59, temp_eb3.OnEvent);
        temp59.Bindings.Add(temp_eb3);
        __g_nametable.This = this;
        __g_nametable.Objects.Add(temp_eb0);
        __g_nametable.Objects.Add(temp_eb1);
        __g_nametable.Objects.Add(temp_eb2);
        __g_nametable.Objects.Add(temp_eb3);
        this.Children.Add(temp31);
        this.Children.Add(temp32);
    }
    static global::Uno.UX.Selector __selector0 = "Value";
    static global::Uno.UX.Selector __selector1 = "mValue";
}
